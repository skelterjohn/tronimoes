syntax = "proto3";

package skelterjohn.tronimoes;
option go_package = "proto;proto";

import "google/protobuf/any.proto";

import "tiles/proto/tiles.proto";

service Tronimoes {
	rpc CreateGame(CreateGameRequest) returns (Operation);

	rpc GetOperation(GetOperationRequest) returns (Operation);

	rpc GetGame(GetGameRequest) returns (Game);
}

message CreateGameRequest {
	// If discoverable is true, players can join you without knowing you.
	bool discoverable = 1;

	// Only look for games that involve one of these players.
	repeated string players = 2;

	// If private is true, don't join a game with a player not requested.
	bool private = 3;

	int32 min_players = 4;

	int32 max_players = 5;

	// The name of the player attempting to create a game.
	string player_id = 6;
}

message JoinResponse {
	Operation operation = 1;
}

message GetOperationRequest {
	string operation_id = 1;
}

message Operation {
	string operation_id = 1;

	bool done = 2;

	google.protobuf.Any payload = 3;

	enum Status {
		UNKNOWN = 0;
		SUCCESS = 1;
		FAILURE = 2;
	}
	Status status = 4;
}

message GetGameRequest {
	string game_id = 1;
}

message Game {
	string game_id = 1;

	repeated string players = 2;

	skelterjohn.tronimoes.tiles.Board board = 3;
}
